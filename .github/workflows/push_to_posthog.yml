name: Repository Traffic to PostHog

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:

jobs:
  send_traffic_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get repository traffic data
      id: traffic_data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get the repository owner and name
        OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
        REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)

        # Get the clone traffic data
        CLONES=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/clones | jq '.count')
        UNIQUE_CLONES=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/clones | jq '.uniques')

        # Get the view traffic data
        VIEWS=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/views | jq '.count')
        UNIQUE_VIEWS=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/views | jq '.uniques')

        # Set the traffic data as output variables
        echo "::set-output name=clones::$CLONES"
        echo "::set-output name=unique_clones::$UNIQUE_CLONES"
        echo "::set-output name=views::$VIEWS"
        echo "::set-output name=unique_views::$UNIQUE_VIEWS"

    - name: Send traffic data to PostHog
      uses: actions/posthog-github-action
      with:
        api_key: ${{ secrets.POSTHOG_API_KEY }}
        event: repository_traffic
        properties: |
          {
            "clones": "${{ steps.traffic_data.outputs.clones }}",
            "unique_clones": "${{ steps.traffic_data.outputs.unique_clones }}",
            "views": "${{ steps.traffic_data.outputs.views }}",
            "unique_views": "${{ steps.traffic_data.outputs.unique_views }}",
            "repository": "${{ github.repository }}"
          }
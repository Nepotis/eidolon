name: Repository Traffic to PostHog

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:

jobs:
  send_traffic_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get repository traffic data and send to PostHog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      run: |
        # Get the repository owner and name
        OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
        REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)

        # Get the clone traffic data
        CLONES=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/clones | jq '.count')
        UNIQUE_CLONES=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/clones | jq '.uniques')

        # Get the view traffic data
        VIEWS=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/views | jq '.count')
        UNIQUE_VIEWS=$(gh api -H "Accept: application/vnd.github+json" /repos/$OWNER/$REPO/traffic/views | jq '.uniques')

        # Prepare the payload for PostHog
        PAYLOAD=$(cat <<EOF
        {
          "event": "repository_traffic",
          "properties": {
            "clones": $CLONES,
            "unique_clones": $UNIQUE_CLONES,
            "views": $VIEWS,
            "unique_views": $UNIQUE_VIEWS,
            "repository": "${{ github.repository }}"
          }
        }
        EOF
        )

        # Send the payload to PostHog
        curl -X POST -H "Authorization: Bearer ${{ secrets.POSTHOG_API_KEY }}" -H "Content-Type: application/json" -d "$PAYLOAD" "https://app.posthog.com/capture"